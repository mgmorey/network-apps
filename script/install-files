#!/bin/sh -eux

# Copyright (C) 2025  "Michael G. Morey" <mgmorey@gmail.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

INCLUDE_DIR=include
OUTPUT_DIR=output
PREFIX=/usr/local

abort() {
    printf "$@" >&2
    exit 1
}

assert() {
    "$@" || abort '%s: Assertion failed: %s\n' "$0" "$*"
}

get_installer() {
    case "$(uname)" in
	(Darwin)
	    printf '%s\n' ginstall
	    ;;
	(*)
	    printf '%s\n' install
	    ;;
    esac
}

get_ostype() {
    case "$(uname)" in
	(MINGW64_NT)
	    printf '%s\n' windows
	    ;;
	(*)
	    printf '%s\n' unix
	    ;;
    esac
}

get_includes() {
    assert [ $# -gt 0 ]
    find "$@" -type f '(' -name '*.h' -o -name '*.hpp' ')'
}

get_libraries() {
    assert [ $# -gt 0 ]
    find "$@" -type f '(' -name '*.a' -o -name '*.so*' ')'
}

get_programs() {
    assert [ $# -gt 0 ]
    find "$@" -type f ! -name '*.*'
}

install_files() {
    install=$(get_installer)
    $install -d "$prefix/bin" "$prefix/include/network" "$prefix/lib"
    $install $(get_programs "$OUTPUT_DIR") "$prefix/bin"
    $install -m 644 $(get_includes "$INCLUDE_DIR/$ostype/network" \
				   "$INCLUDE_DIR/network") \
	     "$prefix/include/network"
    $install $(get_libraries "$OUTPUT_DIR") "$prefix/lib"
    install_symlinks $(get_libraries "$prefix/lib")
}

install_symlinks() {
    assert [ $# -gt 0 ]
    "${script_prefix}install-symlinks" "$@"
}

parse_arguments() {
    include_dir=$INCLUDE_DIR
    output_dir=$OUTPUT_DIR
    prefix=$PREFIX

    while getopts i:o:p:h opt; do
	case $opt in
	    (i)
		include_dir="$OPTARG"
		;;
	    (o)
		output_dir="$OPTARG"
		;;
	    (p)
		prefix="$OPTARG"
		;;
	    (h)
		usage
		exit 0
		;;
	    (\?)
		exit 2
		;;
	esac
    done

    if [ -z "${ostype:-}" ]; then
	ostype=$(get_ostype)
    fi

    shift $(($OPTIND - 1))
}

usage() {
    cat <<EOF >&2
Usage: $script [-i INCLUDE_DIR] [-o OUTPUT_DIR] [-p PREFIX] [-t OSTYPE]
       $script -h
EOF
}

usage_error() {
    if [ $# -gt 0 ]; then
	printf "$@" >&2
    fi

    printf '%s\n' '' >&2
    usage
    exit 2
}

script="$(basename "$0")"

case "$0" in
    (*/*)
	script_dir=$(cd "$(dirname "$0")" && pwd)
	;;
    (*)
	script_dir=
	;;
esac

script_prefix=${script_dir:+$script_dir/}

parse_arguments "$@"
install_files
