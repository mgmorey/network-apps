#!/bin/sh -eu

# Copyright (C) 2022  "Michael G. Morey" <mgmorey@gmail.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

SED='s|\\(%s\\)\\.o[ :]*|%s/\\1.o %s%s: \\\\\\
|
s/^[ ]*//'

parse_arguments() {
    command=
    files=
    prefix=
    output=

    while getopts c:d:f:o:h opt; do
	case $opt in
	    (c)
		command="$OPTARG"
		;;
	    (d)
		parse_prefix
		;;
	    (f)
		files="$OPTARG"
		;;
	    (o)
		parse_output
		;;
	    (h)
		usage
		exit 0
		;;
	    (\?)
		exit 2
		;;
	esac
    done

    shift $(($OPTIND - 1))

    if [ $# -gt 1 ]; then
	usage_error '%s: Too many arguments\n' "$script"
	exit 2
    elif [ $# -lt 1 ]; then
	if [ -z "$output" ]; then
	    usage_error '%s: Not enough arguments\n' "$script"
	    exit 2
	elif [ -z "$prefix" ]; then
	    usage_error '%s: Not enough arguments\n' "$script"
	    exit 2
	else
	    dir="$(dirname "$output" | sed 's|^\./||')"
	    stem="$(basename "$output" | cut -d. -f 1)"
	fi
    else
	stem="$1"
    fi

    files="$output${files:+ $files}"
}

parse_output() {
    output_dir=$(dirname "$OPTARG")
    if [ ! -d "$output_dir" ]; then
	usage_error '%s: "%s": No such directory\n' "$script" "$output_dir"
	exit 2
    else
	output="$OPTARG"
    fi
}

parse_prefix() {
    prefix="$OPTARG"
}

sed_makefile() {
    sed "$(printf "$SED\n" "$stem" "$prefix" "$files")"
}

usage() {
    cat <<EOF >&2
Usage: $script [-c COMMAND] [-f FILE [FILE [...]]] [-o OUTPUT] [-p PREFIX]
       $script -h
EOF
}

usage_error() {
    if [ $# -gt 0 ]; then
	printf "$@" >&2
    fi

    printf '%s\n' '' >&2
    usage
    exit 2
}

script="$(basename "$0")"

parse_arguments "$@"

exec >"$output"

if [ -n "$command" ]; then
    $command | sed_makefile
else
    sed_makefile
fi
