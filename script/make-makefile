#!/bin/sh -eu

# Copyright (C) 2022  "Michael G. Morey" <mgmorey@gmail.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

SED='1s|\\(%s\\)\\(\\.[a-z][a-z]*\\)[ :]*|%s\\1\\2 %s%s: \\\\\\
|
s|^[ ]*||'

cat_makefile() {
    files="${files:+$files }$output_path"

    if [ -n "$command" ]; then
	$command | sed_makefile
    else
	sed_makefile
    fi
}

make_makefile() {
    tmpfile=$(mktemp)
    trap "rm -f $tmpfile" EXIT INT QUIT TERM
    cat_makefile >$tmpfile

    if [ -s $tmpfile ]; then
	mv -f $tmpfile "$output_path"
    fi
}

parse_arguments() {
    command=
    files=
    object_dir=
    output_path=

    while getopts c:d:f:o:h opt; do
	case $opt in
	    (c)
		command="$OPTARG"
		;;
	    (d)
		object_dir="$OPTARG"
		;;
	    (f)
		files="${files+$files }$OPTARG"
		;;
	    (o)
		parse_output
		;;
	    (h)
		usage
		exit 0
		;;
	    (\?)
		exit 2
		;;
	esac
    done

    shift $(($OPTIND - 1))

    if [ -z "$output_path" ]; then
	output_path="$1"
	shift
    fi

    files="$@"
}

parse_output() {
    output_dir=$(dirname "$OPTARG")

    if [ ! -d "$output_dir" ]; then
	usage_error '%s: "%s": No such directory\n' "$script" "$output_dir"
	exit 2
    fi

    output_file=$(basename "$OPTARG")
    output_path="$OPTARG"
    object_stem="${output_file%.*}"
}

sed_makefile() {
    sed "$(printf "$SED\n" "$object_stem" "${object_dir:+$object_dir/}" "$files")"
}

usage() {
    cat <<EOF >&2
Usage: $script [-c COMMAND] [-d OBJECT_DIR] [-o OUTPUT] [OUTPUT] [FILE [...]]
       $script -h
EOF
}

usage_error() {
    if [ $# -gt 0 ]; then
	printf "$@" >&2
    fi

    printf '%s\n' '' >&2
    usage
    exit 2
}

script="$(basename "$0")"

parse_arguments "$@"
make_makefile
