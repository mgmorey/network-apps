# Copyright (C) 2022  "Michael G. Morey" <mgmorey@gmail.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

clang_tidy_version := $(shell bin/get-llvm-version clang-tidy$(LLVM_SUFFIX))
is_clang := $(shell bin/is-clang $(CXX))
is_gcc := $(shell bin/is-gcc $(CXX))

ifdef SDKROOT
ifeq "$(is_clang)" "true"
ifeq "$(shell bin/get-clang-flavor $(CXX))" "Apple"
CPPFLAGS := $(shell bin/remove-option -I$(SDKROOT)/usr/include "$(CPPFLAGS)")
LDFLAGS := $(shell bin/remove-option -L$(SDKROOT)/usr/lib "$(LDFLAGS)")
endif
endif
endif

CPPCHECK_FLAGS = --cppcheck-build-dir=tmp --enable=all --inline-suppr --quiet

ifdef LANGUAGE
	CPPCHECK_FLAGS += --std=$(STANDARD)
endif

ifeq "$(kernel_id)" "MINGW64_NT"
	CPPCHECK_FLAGS += -D_WIN32
endif

ifeq "$(kernel_id)" "FreeBSD"
	CPPFLAGS += -I/usr/local/include
endif

CPPFLAGS += -Iinclude

ifeq "$(kernel_id)" "Darwin"
	CPPFLAGS += -D_DARWIN_C_SOURCE
else ifeq "$(kernel_id)" "CYGWIN_NT"
	CPPFLAGS += -D_POSIX_C_SOURCE=200809L
endif

ifdef NDEBUG
	CPPFLAGS += -D_FORTIFY_SOURCE=2
else ifeq "$(is_gcc)" "true"
	CPPFLAGS += -D_GLIBCXX_DEBUG
endif

ifeq "$(kernel_id)" "Darwin"
	CPPFLAGS += -DHAVE_SOCKADDR_SA_LEN
else ifeq "$(kernel_id)" "FreeBSD"
	CPPFLAGS += -DHAVE_SOCKADDR_SA_LEN
endif

ifndef NDEBUG
	CXXFLAGS += -fno-omit-frame-pointer
ifeq "$(USING_LIBASAN)" "true"
	CXXFLAGS += -fsanitize=address -fsanitize-address-use-after-scope
endif
ifeq "$(is_gcc)" "true"
	CXXFLAGS += -ggdb
else
	CXXFLAGS += -g3
endif
	CXXFLAGS += -O0
else
	CXXFLAGS += -O2
endif

ifdef LANGUAGE
	CXXFLAGS += -std=$(STANDARD)
endif

CXXFLAGS += -Wall -Werror -Wextra -Wpedantic -Wshadow

ifeq "$(is_gcc)" "true"
	CXXFLAGS += -Wa,-adghln=$(subst .o,.lst,$@)
endif

ifndef NDEBUG
ifeq "$(USING_LIBASAN)" "true"
	LDFLAGS += -fsanitize=address
endif
endif

ifeq "$(kernel_id)" "Darwin"
	LDFLAGS += -Wl,-map,$@.map
else ifneq "$(kernel_id)" "FreeBSD"
	LDFLAGS += -Wl,-Map=$@.map
endif

ifeq "$(kernel_id)" "FreeBSD"
	LDLIBS += -L/usr/local/lib
else ifeq "$(kernel_id)" "MINGW64_NT"
	LDLIBS += -lws2_32
endif

ifeq "$(shell bin/compare-versions $(clang_tidy_version) 13)" "less"
	TIDY_FLAGS = -config=
else
	TIDY_FLAGS = -config-file='.clang-tidy'
endif

TIDY_FLAGS += -header-filter='.*' -- -std=$(STANDARD) $(CPPFLAGS)

# Local Variables:
# mode: makefile
# End:
